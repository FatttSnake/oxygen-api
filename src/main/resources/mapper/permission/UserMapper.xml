<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.fatweb.oxygen.api.mapper.permission.UserMapper">
    <select id="selectOneWithPowerInfoByAccount" resultMap="userWithPowerInfoMap">
        select t_user.id                     as user_id,
               t_user.username               as user_username,
               t_user.password               as user_password,
               t_user.verify                 as user_verify,
               t_user.locking                as user_locking,
               t_user.expiration             as user_expiration,
               t_user.credentials_expiration as user_credentials_expiration,
               t_user.enable                 as user_enable,
               t_user.current_login_time     as user_current_login_time,
               t_user.current_login_ip       as user_current_login_ip,
               t_user.last_login_time        as user_last_login_time,
               t_user.last_login_ip          as user_last_login_ip,
               t_user.create_time            as user_create_time,
               t_user.update_time            as user_update_time,
               t_user.deleted                as user_deleted,
               t_user.version                as user_version,
               tui.id                        as user_info_id,
               tui.user_id                   as user_info_user_id,
               tui.nickname                  as user_info_nickname,
               tui.avatar                    as user_info_avatar,
               tui.email                     as user_info_email,
               tui.create_time               as user_info_create_time,
               tui.update_time               as user_info_update_time,
               tui.deleted                   as user_info_deleted,
               tui.version                   as user_info_version,
               tmo.id                        as module_id,
               tmo.name                      as module_name,
               tm.id                         as menu_id,
               tm.name                       as menu_name,
               tm.url                        as menu_url,
               tm.parent_id                  as menu_parent_id,
               tf.id                         as func_id,
               tf.name                       as func_name,
               tf.parent_id                  as func_parent_id,
               tf.menu_id                    as func_menu_id,
               t.id                          as operation_id,
               t.name                        as operation_name,
               t.code                        as operation_code,
               t.func_id                     as operation_func_id
        from t_user
                 left join (select * from t_user_info where deleted = 0) as tui on t_user.id = tui.user_id
                 left join (select * from t_user_group where deleted = 0) as tug on t_user.id = tug.user_id
                 left join (select * from t_group where deleted = 0 and enable = 1) as tg on tg.id = tug.group_id
                 left join (select * from t_role_group where deleted = 0) as trg on tg.id = trg.group_id
                 left join (select * from t_user_role where deleted = 0) as tur on t_user.id = tur.user_id
                 left join (select * from t_role where deleted = 0 and enable = 1) as tr
                           on tr.id = trg.role_id or tr.id = tur.role_id
                 left join (select * from t_power_role where deleted = 0) as tpr on tr.id = tpr.role_id
                 left join t_power as tp on tp.id = tpr.power_id
                 left join t_module as tmo on tp.id = tmo.id
                 left join t_menu as tm on tp.id = tm.id
                 left join t_func as tf on tp.id = tf.id
                 left join t_operation as t on tp.id = t.id
        where t_user.deleted = 0
          and (tui.email = #{account} or t_user.username = #{account});
    </select>

    <select id="selectPage" resultType="long">
        select t_user.id
        from t_user
        left join (select * from t_user_info where deleted = 0) as tui on t_user.id = tui.user_id
        <where>
            t_user.deleted = 0
            <if test="searchValue != null">
                <choose>
                    <when test="searchType == 'ID'">
                        <choose>
                            <when test="searchRegex == true">
                                and t_user.id regexp #{searchValue}
                            </when>
                            <otherwise>
                                and t_user.id like concat('%' ,#{searchValue}, '%')
                            </otherwise>
                        </choose>
                    </when>
                    <when test="searchType == 'USERNAME'">
                        <choose>
                            <when test="searchRegex == true">
                                and t_user.username regexp #{searchValue}
                            </when>
                            <otherwise>
                                and t_user.username like concat('%' ,#{searchValue}, '%')
                            </otherwise>
                        </choose>
                    </when>
                    <when test="searchType == 'NICKNAME'">
                        <choose>
                            <when test="searchRegex == true">
                                and tui.nickname regexp #{searchValue}
                            </when>
                            <otherwise>
                                and tui.nickname like concat('%' ,#{searchValue}, '%')
                            </otherwise>
                        </choose>
                    </when>
                    <when test="searchType == 'EMAIL'">
                        <choose>
                            <when test="searchRegex == true">
                                and tui.email regexp #{searchValue}
                            </when>
                            <otherwise>
                                and tui.email like concat('%' ,#{searchValue}, '%')
                            </otherwise>
                        </choose>
                    </when>
                    <otherwise>
                        <choose>
                            <when test="searchRegex == true">
                                and ( t_user.username regexp #{searchValue} or tui.nickname regexp #{searchValue} or
                                tui.email regexp #{searchValue})
                            </when>
                            <otherwise>
                                and (t_user.username like concat('%' ,#{searchValue}, '%') or tui.nickname like
                                concat('%' ,#{searchValue}, '%') or tui.email like concat('%' ,#{searchValue}, '%'))
                            </otherwise>
                        </choose>
                    </otherwise>
                </choose>
            </if>
        </where>
    </select>

    <select id="selectListWithRoleInfoByIds" resultMap="userWithRoleInfoMap">
        select t_user.id as user_id,
        t_user.username as user_username,
        t_user.verify as user_verify,
        t_user.locking as user_locking,
        t_user.expiration as user_expiration,
        t_user.credentials_expiration as user_credentials_expiration,
        t_user.enable as user_enable,
        t_user.current_login_time as user_current_login_time,
        t_user.current_login_ip as user_current_login_ip,
        t_user.last_login_time as user_last_login_time,
        t_user.last_login_ip as user_last_login_ip,
        t_user.create_time as user_create_time,
        t_user.update_time as user_update_time,
        t_user.deleted as user_deleted,
        t_user.version as user_version,
        tui.id as user_info_id,
        tui.user_id as user_info_user_id,
        tui.nickname as user_info_nickname,
        tui.avatar as user_info_avatar,
        tui.email as user_info_email,
        tui.create_time as user_info_create_time,
        tui.update_time as user_info_update_time,
        tui.deleted as user_info_deleted,
        tui.version as user_info_version,
        tr.id as role_id,
        tr.name as role_name,
        tr.enable as role_enable,
        tr.deleted as role_deleted,
        tr.version as role_version,
        tg.id as group_id,
        tg.name as group_name,
        tg.enable as group_enable,
        tg.deleted as group_deleted,
        tg.version as group_version
        from t_user
        left join (select * from t_user_info where deleted = 0) as tui on t_user.id = tui.user_id
        left join (select * from t_user_group where deleted = 0) as tug on t_user.id = tug.user_id
        left join (select * from t_group where deleted = 0) as tg on tg.id = tug.group_id
        left join (select * from t_role_group where deleted = 0) as trg on tg.id = trg.group_id
        left join (select * from t_user_role where deleted = 0) as tur on t_user.id = tur.user_id
        left join (select * from t_role where deleted = 0) as tr
        on tr.id = trg.role_id or tr.id = tur.role_id
        <where>
            <foreach collection="userIds" item="item" index="index" open="and t_user.id in (" separator="," close=")"
                     nullable="true">
                #{item}
            </foreach>
        </where>
    </select>

    <select id="selectOneWithRoleInfoById" resultMap="userWithRoleInfoMap">
        select t_user.id                     as user_id,
               t_user.username               as user_username,
               t_user.verify                 as user_verify,
               t_user.locking                as user_locking,
               t_user.expiration             as user_expiration,
               t_user.credentials_expiration as user_credentials_expiration,
               t_user.enable                 as user_enable,
               t_user.current_login_time     as user_current_login_time,
               t_user.current_login_ip       as user_current_login_ip,
               t_user.last_login_time        as user_last_login_time,
               t_user.last_login_ip          as user_last_login_ip,
               t_user.create_time            as user_create_time,
               t_user.update_time            as user_update_time,
               t_user.deleted                as user_deleted,
               t_user.version                as user_version,
               tui.id                        as user_info_id,
               tui.user_id                   as user_info_user_id,
               tui.nickname                  as user_info_nickname,
               tui.avatar                    as user_info_avatar,
               tui.email                     as user_info_email,
               tui.create_time               as user_info_create_time,
               tui.update_time               as user_info_update_time,
               tui.deleted                   as user_info_deleted,
               tui.version                   as user_info_version,
               tr.id                         as role_id,
               tr.name                       as role_name,
               tr.enable                     as role_enable,
               tr.deleted                    as role_deleted,
               tr.version                    as role_version,
               tg.id                         as group_id,
               tg.name                       as group_name,
               tg.enable                     as group_enable,
               tg.deleted                    as group_deleted,
               tg.version                    as group_version
        from t_user
                 left join (select * from t_user_info where deleted = 0) as tui on t_user.id = tui.user_id
                 left join (select * from t_user_group where deleted = 0) as tug on t_user.id = tug.user_id
                 left join (select * from t_group where deleted = 0) as tg on tg.id = tug.group_id
                 left join (select * from t_role_group where deleted = 0) as trg on tg.id = trg.group_id
                 left join (select * from t_user_role where deleted = 0) as tur on t_user.id = tur.user_id
                 left join (select * from t_role where deleted = 0) as tr
                           on tr.id = trg.role_id or tr.id = tur.role_id
        where t_user.deleted = 0
          and t_user.id = #{id}
    </select>

    <select id="selectListWithInfo" resultMap="userWithInfoMap">
        select t_user.id                     as user_id,
               t_user.username               as user_username,
               t_user.verify                 as user_verify,
               t_user.locking                as user_locking,
               t_user.expiration             as user_expiration,
               t_user.credentials_expiration as user_credentials_expiration,
               t_user.enable                 as user_enable,
               t_user.current_login_time     as user_current_login_time,
               t_user.current_login_ip       as user_current_login_ip,
               t_user.last_login_time        as user_last_login_time,
               t_user.last_login_ip          as user_last_login_ip,
               t_user.create_time            as user_create_time,
               t_user.update_time            as user_update_time,
               t_user.deleted                as user_deleted,
               t_user.version                as user_version,
               tui.id                        as user_info_id,
               tui.user_id                   as user_info_user_id,
               tui.nickname                  as user_info_nickname,
               tui.avatar                    as user_info_avatar,
               tui.email                     as user_info_email,
               tui.create_time               as user_info_create_time,
               tui.update_time               as user_info_update_time,
               tui.deleted                   as user_info_deleted,
               tui.version                   as user_info_version
        from t_user
                 left join (select * from t_user_info where deleted = 0) as tui on t_user.id = tui.user_id
        where t_user.deleted = 0
    </select>

    <select id="selectIdsWithRoleIds" resultType="long">
        select t_user.id
        from t_user
        left join (select * from t_user_role where deleted = 0) as tur on t_user.id = tur.user_id
        left join (select * from t_role where deleted = 0) as tr on tr.id = tur.role_id
        <where>
            t_user.deleted = 0
            <foreach collection="roleIds" item="item" index="index" open="and tr.id in (" separator="," close=")"
                     nullable="true">
                #{item}
            </foreach>
        </where>
    </select>

    <select id="selectIdsWithGroupIds" resultType="long">
        select t_user.id
        from t_user
        left join (select * from t_user_group where deleted = 0) as tug on t_user.id = tug.user_id
        left join (select * from t_group where deleted = 0) as tg on tg.id = tug.group_id
        <where>
            t_user.deleted = 0
            <foreach collection="groupIds" item="item" index="index" open="and tg.id in (" separator="," close=")"
                     nullable="true">
                #{item}
            </foreach>
        </where>
    </select>

    <resultMap id="userBaseMap" type="user">
        <id property="id" column="user_id"/>
        <result property="username" column="user_username"/>
        <result property="verify" column="user_verify"/>
        <result property="locking" column="user_locking"/>
        <result property="expiration" column="user_expiration"/>
        <result property="credentialsExpiration" column="user_credentials_expiration"/>
        <result property="enable" column="user_enable"/>
        <result property="currentLoginTime" column="user_current_login_time"/>
        <result property="currentLoginIp" column="user_current_login_ip"/>
        <result property="lastLoginTime" column="user_last_login_time"/>
        <result property="lastLoginIp" column="user_last_login_ip"/>
        <result property="createTime" column="user_create_time"/>
        <result property="updateTime" column="user_update_time"/>
        <result property="deleted" column="user_deleted"/>
        <result property="version" column="user_version"/>
    </resultMap>

    <resultMap id="userWithInfoMap" type="user" extends="userBaseMap">
        <association property="userInfo" resultMap="top.fatweb.oxygen.api.mapper.permission.UserInfoMapper.userInfoMap"/>
    </resultMap>

    <resultMap id="userWithPowerInfoMap" type="user" extends="userWithInfoMap">
        <result property="password" column="user_password"/>
        <collection property="modules" resultMap="top.fatweb.oxygen.api.mapper.permission.ModuleMapper.moduleMap"/>
        <collection property="menus" resultMap="top.fatweb.oxygen.api.mapper.permission.MenuMapper.menuMap"/>
        <collection property="funcs" resultMap="top.fatweb.oxygen.api.mapper.permission.FuncMapper.funcMap"/>
        <collection property="operations" resultMap="top.fatweb.oxygen.api.mapper.permission.OperationMapper.operationMap"/>
    </resultMap>

    <resultMap id="userWithRoleInfoMap" type="user" extends="userWithInfoMap">
        <collection property="roles" resultMap="top.fatweb.oxygen.api.mapper.permission.RoleMapper.roleMap"/>
        <collection property="groups" resultMap="top.fatweb.oxygen.api.mapper.permission.GroupMapper.groupMap"/>
    </resultMap>
</mapper>
